<?php

/**
 * This is a unit-test based on CiviUnitTestCase.
 *
 * CiviUnitTestCase has a bunch of built-in features, such as:
 *   - Auto-populating the headless test database with clean data.
 *   - Resetting Civi's singletons and static variables.
 *   - Wrapping tests inside transactions (optional).
 *   - Defining random helper functions ($this).
 *
 * However, CiviUnitTestCase also has a pretty large surface area, which
 * increases the odds that either (a) it does something you don't want
 * or (b) it changes in the future.
 *
 * @group headless
 */
class CRM_Testapalooza_MyCoreStyleTest extends CiviUnitTestCase
  implements \Civi\Test\HeadlessInterface {

  public function setUpHeadless() {
    CiviTester::headless()->extDir(__DIR__)->apply();
  }

  public function setUp() {
    parent::setUp();
    $this->useTransaction();
  }

  public function tearDown() {
    parent::tearDown();
  }

  /**
   * Test that version is returned.
   */
  public function testWellFormedVersion() {
    $this->assertRegExp('/^([0-9\.]|alpha|beta)*$/', CRM_Utils_System::version());
  }

  public function testPageOutput() {
    ob_start();
    $p = new CRM_Testapalooza_Page_FooBar();
    $p->run();
    $content = ob_get_contents();
    ob_end_clean();
    $this->assertRegExp(';This new page is generated by CRM/Testapalooza/Page/FooBar.php;', $content);
  }

  public function testExtClassLoaders() {
    $this->assertEquals(CRM_Testapalooza_FooBar::double(3), 6);
    $this->assertEquals(\Civi\Testapalooza\FooBar::square(4), 16);
  }

}
